name: Publish Release from Metadata

on:
  workflow_dispatch:

jobs:
  fetch-and-publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: chrisdickinson/setup-yq@latest

      - name: Execute release process
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up environment
          METADATA_URL_BASE="https://dist.ams3.cdn.digitaloceanspaces.com"
          FILES=("latest.yml" "latest-mac.yml" "latest-linux.yml")
          mkdir -p metadata

          # Fetch metadata files
          for file in ${FILES[@]}; do
            curl -sSL "$METADATA_URL_BASE/$file" -o "metadata/$file"
          done

          # Parse metadata and check for existing release
          for file in metadata/*.yml; do
            echo "Processing $file"
            version=$(yq r "$file" '.version')

            if [ -n "$version" ]; then
              # Check if release or tag already exists
              if gh release view "v$version" >/dev/null 2>&1; then
                echo "Release for version $version already exists. Terminating."
                exit 1
              fi

              break  # Use first valid version found
            fi
          done

          # Create a tag for the fetched version
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag "v$version"
          git push origin "v$version"

          # Create a draft release
          {
            echo "Draft Release for version $version"
            echo
            echo "Download Links:"
            for file in metadata/*.yml; do
              urls=$(yq r '.files[].url' "$file")
              for url in $urls; do
                ext="$(echo "$url" | awk -F. '{print $NF}')"
                echo "- [$ext]($METADATA_URL_BASE/$url)"
              done
              echo "- [$ext]($METADATA_URL_BASE/$url)"
            done
          } > release_notes.txt

          gh release create "v$version" --draft --notes-file release_notes.txt
